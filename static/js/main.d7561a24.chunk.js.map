{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/App/App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","onClick","name","Statistic","label","value","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleLeaveFeedback","e","target","setState","prevState","this","totalFeedbackCount","Object","values","reduce","acc","positiveFeedbackPercentage","Number","parseFloat","toFixed","keys","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAkBeA,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BAASC,UAAU,YACjB,wBAAIA,UAAU,SAASF,GACtBC,ICkBUE,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,4BACEC,IAAKD,EACLL,UAAU,MACVO,KAAK,SACLC,QAASL,EACTM,KAAMJ,GAELA,QCGMK,EAbG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAChB,oCACE,uBAAGZ,UAAU,QACVW,EADH,IACWC,KCwCAC,EAzCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACGD,EAAQ,GACP,oCACE,kBAAC,EAAD,CAASnB,MAAM,cACb,wBAAIE,UAAU,QACZ,wBAAIA,UAAU,YACZ,kBAAC,EAAD,CAAWW,MAAM,QAAQC,MAAOE,KAElC,wBAAId,UAAU,YACZ,kBAAC,EAAD,CAAWW,MAAM,WAAWC,MAAOG,KAErC,wBAAIf,UAAU,YACZ,kBAAC,EAAD,CAAWW,MAAM,OAAOC,MAAOI,KAEjC,wBAAIhB,UAAU,YACZ,kBAAC,EAAD,CAAWW,MAAM,SAASC,MAAOK,KAEnC,wBAAIjB,UAAU,YACZ,kBAAC,EAAD,CACEW,MAAM,qBACNC,MAAK,UAAKM,EAAL,WAQhBD,GAAS,GAAK,uBAAGjB,UAAU,QAAb,uBC7BEmB,E,2MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,oBAAsB,SAAAC,GAAM,IAClBb,EAASa,EAAEC,OAAXd,KAER,EAAKe,UAAS,SAAAC,GAAS,sBACpBhB,EAAOgB,EAAUhB,GAAQ,O,wEAIpB,IAAD,EACwBiB,KAAKN,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBW,EAAqBC,OAAOC,OAAPD,OAAA,IAAAA,CAAA,GAAmBF,KAAKN,QAASU,QAC1D,SAACC,EAAKnB,GAAN,OAAgBmB,EAAMnB,IACtB,GAGIoB,EACJlB,EAAO,EACHmB,OAAOC,WAAYpB,EAAOa,EAAsB,KAAKQ,WACrD,EAEN,OACE,oCACE,kBAAC,EAAD,CAASrC,MAAM,yBACb,kBAAC,EAAD,CACEI,QAAS0B,OAAOQ,KAAPR,OAAA,IAAAA,CAAA,GAAiBF,KAAKN,QAC/BjB,gBAAiBuB,KAAKL,sBAExB,kBAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,EACPT,mBAAoBc,U,GAxCCK,aCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d7561a24.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section className=\"feedback\">\n    <h2 className=\"title\">{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    {options.map(option => (\n      <button\n        key={option}\n        className=\"btn\"\n        type=\"button\"\n        onClick={onLeaveFeedback}\n        name={option}\n      >\n        {option}\n      </button>\n    ))}\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ label, value }) => (\n  <>\n    <p className=\"text\">\n      {label} {value}\n    </p>\n  </>\n);\n\nStatistic.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from '../Section/Section';\nimport Statistic from '../Statistic/Statistic';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    {total > 0 && (\n      <>\n        <Section title=\"Statistics\">\n          <ul className=\"list\">\n            <li className=\"listItem\">\n              <Statistic label=\"Good:\" value={good} />\n            </li>\n            <li className=\"listItem\">\n              <Statistic label=\"Neutral:\" value={neutral} />\n            </li>\n            <li className=\"listItem\">\n              <Statistic label=\"Bad:\" value={bad} />\n            </li>\n            <li className=\"listItem\">\n              <Statistic label=\"Total:\" value={total} />\n            </li>\n            <li className=\"listItem\">\n              <Statistic\n                label=\"Positive feedback:\"\n                value={`${positivePercentage}%`}\n              />\n            </li>\n          </ul>\n        </Section>\n      </>\n    )}\n\n    {total <= 0 && <p className=\"text\">No feedback given</p>}\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Section from '../Section/Section';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleLeaveFeedback = e => {\n    const { name } = e.target;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const totalFeedbackCount = Object.values({ ...this.state }).reduce(\n      (acc, value) => acc + value,\n      0,\n    );\n\n    const positiveFeedbackPercentage =\n      good > 0\n        ? Number(parseFloat((good / totalFeedbackCount) * 100).toFixed())\n        : 0;\n\n    return (\n      <>\n        <Section title=\"Please Leave feedback\">\n          <FeedbackOptions\n            options={Object.keys({ ...this.state })}\n            onLeaveFeedback={this.handleLeaveFeedback}\n          />\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedbackCount}\n            positivePercentage={positiveFeedbackPercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}